version: '3'

services:

  db:
    container_name: ecormmercedb
    image: postgres
    environment:
      GET_HOST_FROM: dns
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    hostname: db
    ports:
      - 5434:5434
    volumes:
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/1-init_db.sql
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/2-schema.sql
    networks:
      - ecormmercenet

  ecommerceapi:
    container_name: ecormmerce-app
    image: abdulmuhsin/ecormmerce_app:v1
    hostname: ecormmerce_app
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      GET_HOSTS_FROM: dns
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
    - ecormmercenet
    volumes:
    - .:/go/src/ecormmerce-rest-api
    ports:
    - 8080:8080
    depends_on:
    - db
    links:
    - db
    labels:
      kompose.service.type: LoadBalancer

  authserver:
    container_name: auth-server
    image: abdulmuhsin/auth-server:v1
    hostname: auth-server
    env_file: .env
    build: 
      context: ./auth-server
      dockerfile: Dockerfile
    environment:
      GET_HOSTS_FROM: dns
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
      - ecormmercenet
      volumes:
      - .:/go/src/ecormmerce-rest-api/auth-server
      ports:
      - 9096:9096
      depends_on:
      - db
      links:
      - db
      labels:
        kompose.service.type: LoadBalancer

  adminclient:
    container_name: admin-client
    image: abdulmuhsin/admin-client:v1
    hostname: admin-client
    env_file: admin-client/.env
    build: 
      context: ./admin-client
      dockerfile: Dockerfile
    environment:
      GET_HOSTS_FROM: dns
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
      - ecormmercenet
      volumes:
      - .:/go/src/ecormmerce-rest-api/admin-client
      ports:
      - 80:8080
  
  redis:
    image: "redis:alpine"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      node_net:
        ipv4_address: 172.28.1.4

networks:
  ecormmercenet:
    driver: bridge
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16