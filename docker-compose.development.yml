version: "3"

services:
  ecormmercedbdev:
    container_name: ecormmercedbdev
    image: postgres
    environment:
      GET_HOST_FROM: dns
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    hostname: ecormmercedbdev
    ports:
      - 5434:5434
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/1-init_db.sql
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/2-schema.sql
      - ./sql/seed.sql:/docker-entrypoint-initdb.d/3-seed.sql
    networks:
      - ecormmercenetdev

  ecommerceapidev:
    container_name: ecormmerce-api-dev
    image: abdulmuhsin/ecormmerce-api-dev:v1
    hostname: ecormmerce-api-dev
    env_file: .env
    build:
      context: ./ecormmerce-rest-api
      dockerfile: Dockerfile-dev
    environment:
      GET_HOSTS_FROM: dns
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: ${DB_PORT_DOCKER}
      DB_HOST: ${DB_HOST_DOCKER_DEV}
      ADMIN_CLIENT_ID: ${ADMIN_CLIENT_ID}
      ADMIN_CLIENT_SECRET: ${ADMIN_CLIENT_SECRET}
      ADMIN_CLIENT_DOMAIN: ${ADMIN_CLIENT_DOMAIN}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_SERVER_HOST: ${REDIS_SERVER_HOST_DOCKER_DEV}
      REDIS_SERVER_PASS: ${REDIS_SERVER_PASS}
      REDIS_SERVER_PORT: ${REDIS_SERVER_PORT_DOCKER}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      RESOURCE_ALLOWED_ORIGIN: ${RESOURCE_ALLOWED_ORIGIN}
    networks:
      - ecormmercenetdev
    volumes:
      - .:/go/src/ecormmerce-app/ecormmerce-rest-api
    ports:
      - 8081:8081
    depends_on:
      - ecormmercedbdev
      - redisdbdev
    labels:
      kompose.service.type: LoadBalancer

  authserverdev:
    container_name: auth-server-dev
    image: abdulmuhsin/auth-server-dev:v1
    hostname: auth-server-dev
    # env_file: .env
    build:
      context: ./auth-server
      dockerfile: Dockerfile-dev
    environment:
      GET_HOSTS_FROM: dns
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: ${DB_PORT_DOCKER}
      DB_HOST: ${DB_HOST_DOCKER_DEV}
      SESSION_KEY: ${SESSION_KEY}
      STATE_HASH_KEY: ${STATE_HASH_KEY}
      ADMIN_CLIENT_ID: ${ADMIN_CLIENT_ID}
      ADMIN_CLIENT_SECRET: ${ADMIN_CLIENT_SECRET}
      ADMIN_CLIENT_DOMAIN: ${ADMIN_CLIENT_DOMAIN}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_SERVER_HOST: ${REDIS_SERVER_HOST_DOCKER_DEV}
      REDIS_SERVER_PASS: ${REDIS_SERVER_PASS}
      REDIS_SERVER_PORT: ${REDIS_SERVER_PORT_DOCKER}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      AUTH_ALLOWED_ORIGIN: ${AUTH_ALLOWED_ORIGIN}
    networks:
      - ecormmercenetdev
    volumes:
      - .:/go/src/ecormmerce-app/auth-server
    ports:
      - 9096:9096
    depends_on:
      - ecormmercedbdev
      - redisdbdev
    labels:
      kompose.service.type: LoadBalancer

  adminclientdev:
    container_name: admin-client-dev
    image: abdulmuhsin/admin-client-dev:v1
    hostname: admin-client-dev
    env_file: ./admin-client/.env
    build:
      context: ./admin-client
      dockerfile: Dockerfile-dev
    environment:
      GET_HOSTS_FROM: dns
    networks:
      - ecormmercenetdev
    volumes:
      - .:/go/src/ecormmerce-app/admin-client
    ports:
      - 8080:8080

  redisdbdev:
    image: "redis:alpine"
    container_name: redisdbdev
    command: redis-server --requirepass ${REDIS_SERVER_PASS}
    hostname: redisdbdev
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_APPENDONLY=yes
      - REDIS_APPENDFSYNC=always
    networks:
      - ecormmercenetdev

  migration:
    container_name: migration
    image: abdulmuhsin/migration
    hostname: migration
    build:
      context: ./migration
      dockerfile: Dockerfile
    environment:
      GET_HOSTS_FROM: dns
      PORT: 9090
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PORT: ${DB_PORT}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
    ports:
      - 9090:9090
    networks:
      - ecormmercenetdev
    labels:
      kompose.service.type: LoadBalancer

networks:
  ecormmercenetdev:
    driver: bridge
